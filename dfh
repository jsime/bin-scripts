#!/usr/bin/perl

use strict;
use warnings;

my ($i, %d);
my $t_size = 0;
my $t_used = 0;
my $t_avail = 0;

open(DF, "df -TP|") || die "Error listing devices: $!";

while (<DF>) {
	next if $_ =~ /^filesystem/oi;
	chomp;

	my @t = split(/\s+/);
	$t[0] = shift(@t) . ' ' . $t[0] if $t[1] =~ /^[A-Z]/o && $t[2] !~ /^\d+$/o;

	$t_size += $t[2];
	$t_used += $t[3];
	$t_avail += $t[4];

	$d{$t[6]} = [ @t ];
}

close(DF);

my $p_use = sprintf("%d%%", $t_used / $t_size * 100);

my @k = (["Filesystem","Type","Size","Used","Avail","Use%","Mounted on"]);

push(@k, $d{$_}) for sort keys %d;
push(@k, ['','',$t_size,$t_used,$t_avail,$p_use,'']);

foreach my $d (@k) {
	foreach $i (qw( 2 3 4 )) {
		next unless $d->[$i] =~ /^\d+$/o;
		$d->[$i] =
				$d->[$i] >= 1024**4	? sprintf("%.2fP", $d->[$i] / 1024**4)
			:	$d->[$i] >= 1024**3	? sprintf("%.2fT", $d->[$i] / 1024**3)
			:	$d->[$i] >= 1024**2	? sprintf("%.2fG", $d->[$i] / 1024**2)
			:	$d->[$i] >= 1024	? sprintf("%.2fM", $d->[$i] / 1024)
			:	$d->[$i] == 0		? ''
			:	$d->[$i];
	}
}

my (@s, @ln);

for ($i = 0; $i < 7; $i++) {
	my $l = 0;
	foreach my $r (@k) {
		my $l2 = length($r->[$i]);
		$l = $l2 if $l2 > $l;
	}
	push(@s, "%" . ($i =~ /^(0|6)$/os ? "-" : "") . $l . "s");
	push(@ln, '-' x $l);
}

my $spec = join("  ", @s) . "\n";

unshift(@k, shift(@k), [@ln]);
push(@k, [@ln], pop(@k));

printf($spec, @{$_}) foreach @k;

